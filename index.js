// Generated by CoffeeScript 1.3.3
(function() {
  var merge;

  exports.capitalize = function(aString) {
    return aString[0].toUpperCase() + aString.slice(1);
  };

  exports.getCookieParam = function(cookieData, paramName) {
    var inSet, set, _i, _len, _ref;
    _ref = cookieData.split("; ");
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      set = _ref[_i];
      inSet = set.split("=");
      if (inSet[0] === paramName) {
        return decodeURIComponent(inSet[1]);
      }
    }
  };

  exports.merge = merge = function(to, takeFrom, takeFrom2) {
    var cnt, key, keys, p, tmpMrg, tmpObj, _i, _len, _ref;
    if (arguments.length > 2) {
      cnt = 0;
      keys = Object.keys(arguments);
      tmpMrg = merge(arguments[keys.shift()], arguments[keys.shift()]);
      for (_i = 0, _len = keys.length; _i < _len; _i++) {
        key = keys[_i];
        merge(tmpMrg, arguments[key]);
      }
      return tmpMrg;
    }
    for (p in takeFrom) {
      if (((_ref = takeFrom[p]) != null ? _ref.constructor : void 0) === Object) {
        tmpObj = to[p] || {};
        to[p] = merge(tmpObj, takeFrom[p]);
      } else {
        to[p] = takeFrom[p];
      }
    }
    return to;
  };

  exports.makeObject = function(prototype) {
    var func;
    func = function() {};
    func.prototype = prototype;
    return new func();
  };

  exports.navigateTo = function(location) {
    return typeof window !== "undefined" && window !== null ? window.location.href = location : void 0;
  };

}).call(this);
